<?xml version="1.0"?>
<!-- Copyright 2008 by Oxford University; see license.txt for details -->

<project name="HermiT" default="combined" basedir=".">

    <!-- determine the build date -->
    <tstamp>
        <format property="builddate" pattern="yyyy-MM-dd"/>
    </tstamp>
    <!-- Note that on each released build, the ${updatefile} on the web site
         should be replaced, and the new version of the plugin should be
         posted at the (auto-generated) URL in that file. -->
    <!-- version 0.9.0 build from revision 203 on 2008-10-25 by rob -->
    <!-- version 0.9.1 build from revision 206 on 2008-10-26 by rob -->
    <!-- version 0.9.2 build from revision 208 on 2008-10-26 by rob -->
    <!-- version 0.9.3 build from revision 233 on 2008-12-12 by rob -->
    <property name="version" value="0.9.4"/>

    <!-- general info -->
    <property name="homepage" value="http://hermit-reasoner.com/"/>
    <property name="updatefile" value="${homepage}/protege-plugin/update.properties"/>
    
    <!-- structure of output files -->
    <property name="projectroot" value="."/>
    <property name="builddir" value="${projectroot}/build"/>
    <property name="flattendir" value="${builddir}/flatten"/>
    <property name="classdir" value="${builddir}/class"/>
    <property name="plugindir" value="${builddir}/plugin"/>
    <property name="testclassdir" value="${builddir}/testclass"/>

    <!-- structure of the release -->
    <property name="releasedir" value="${builddir}/release"/>
    <property name="HermiTjar" value="${releasedir}/${ant.project.name}.jar"/>
    <property name="javadocdir" value="${builddir}/javadoc"/>
    
    <!-- structure of 3rdparty libraries -->
    <property name="3rdpartydir" value="${projectroot}/../ThirdPartyOwlTools"/>
    <property name="owlapi" value="${3rdpartydir}/owlapi/2.2.1/owlapi-bin.jar"/>
    <property name="junit" value="${3rdpartydir}/junit/4.4/junit-4.4.jar"/>
    <property name="protegeapp" value="${3rdpartydir}/protege/4.0/org.protege.editor.core.application.jar"/>
    <property name="protegeowl" value="${3rdpartydir}/protege/4.0/org.protege.editor.owl.jar"/>

    <!-- SOURCE PATHS -->
    <path id="sourcepath">
        <pathelement path="${projectroot}/src"/>
        <pathelement path="${projectroot}/getopt"/>
        <pathelement path="${projectroot}/automaton"/>
    </path>
    <path id="testsourcepath">
        <pathelement path="${projectroot}/test"/>
    </path>

    <!-- CLASS PATHS -->
    <path id="classpath">
        <pathelement location="${owlapi}"/>
        <pathelement location="${protegeapp}"/>
        <pathelement location="${protegeowl}"/>
    </path>
    <path id="testclasspath">
        <pathelement path="${classdir}"/>
        <pathelement location="${junit}"/>
    </path>

    <!-- RELEASE TARGETS  -->

    <target name="clean">
        <delete dir="${builddir}"/>
    </target>

    <target name="compile">
        <mkdir dir="${classdir}"/>
        <javac destdir="${classdir}" deprecation="yes" debug="on">
            <compilerarg value="-Xlint:all"/>
            <src refid="sourcepath"/>
            <classpath refid="classpath"/>
        </javac>
        <copy todir="${classdir}">
            <fileset dir="${projectroot}/automaton" includes="**/*.aut,**/*.txt"/>
        </copy>
        <copy todir="${classdir}">
            <fileset dir="${projectroot}/getopt" includes="**/*.properties"/>
        </copy>
        <copy todir="${classdir}" file="src/plugin.xml">
            <filterset>
                <filter token="VERSION" value="${version}"/>
            </filterset>
        </copy>
    </target>
    
    <target name="javadoc">
        <mkdir dir="${javadocdir}"/>
        <javadoc sourcepathref="sourcepath" destdir="${javadocdir}" access="protected" author="false" version="true" use="true">
            <classpath refid="classpath"/>
            <classpath refid="testclasspath"/>
            <package name="org.semanticweb.HermiT.*"/>
        </javadoc>
    </target>
    
    <target name="flatten-owlapi">
        <mkdir dir="${flattendir}"/>
        <unjar src="${owlapi}" dest="${flattendir}"/>
    </target>

    <target name="quick" depends="compile">
        <mkdir dir="${releasedir}"/>
        <copy file="${projectroot}/update.properties" tofile="${releasedir}/update.properties">
            <filterset>
                <filter token="VERSION" value="${version}"/>
                <filter token="HOMEPAGE" value="${homepage}"/>
            </filterset>
        </copy>
        <copy file="${projectroot}/readme.txt" tofile="${releasedir}/readme.txt">
            <filterset>
                <filter token="VERSION" value="${version}"/>
            </filterset>
        </copy>
        <jar jarfile="${HermiTjar}">
            <manifest>
                <attribute name="Implementation-Title" value="HermiT"/>
                <attribute name="Implementation-Vendor" value="Oxford University"/>
                <attribute name="Implementation-Version" value="${version}"/>
                <attribute name="Main-Class" value="org.semanticweb.HermiT.CommandLine"/>
                <attribute name="Bundle-ManifestVersion" value="2"/>
                <attribute name="Bundle-Name" value="HermiT Reasoner"/>
                <attribute name="Bundle-SymbolicName" value="org.semanticweb.HermiT;singleton:=true"/>
                <attribute name="Bundle-Category" value="protege"/>
                <attribute name="Bundle-Description" value="A plugin for the Protege OWL Editor which allows reasoning using the HermiT reasoner"/>
                <attribute name="Bundle-DocURL" value="${homepage}"/>
                <attribute name="Bundle-Vendor" value="Boris Motik, Birte Glimm, Rob Shearer, and Ian Horrocks"/>
                <attribute name="Bundle-Version" value="${version}"/>
                <attribute name="Bundle-Activator" value="org.protege.editor.core.plugin.DefaultPluginActivator"/>
                <attribute name="Bundle-ClassPath" value="."/>
                <attribute name="Require-Bundle" value="org.protege.common,org.protege.editor.core.application,org.protege.editor.owl,org.semanticweb.owl.owlapi"/>
                <attribute name="Update-Url" value="${updatefile}"/>
            </manifest>
            <fileset dir="${classdir}"/>
            <fileset dir="${flattendir}"/>
            <zipfileset dir="${projectroot}/src" prefix="src"/>
            <zipfileset dir="${projectroot}/getopt" prefix="src"/>
            <zipfileset dir="${projectroot}/automaton" prefix="src"/>
            <zipfileset dir="${javadocdir}" prefix="javadoc"/>
            <fileset file="${releasedir}/readme.txt"/>
            <fileset file="gpl.txt"/>
        </jar>
    </target>
    
    <target name="combined" depends="compile,javadoc,flatten-owlapi,quick"/>
    
    <!-- TEST TARGETS -->

    <target name="compiletest" depends="compile">
        <mkdir dir="${testclassdir}"/>
        <javac destdir="${testclassdir}" deprecation="yes">
            <compilerarg value="-Xlint:unchecked"/>
            <src refid="testsourcepath"/>
            <classpath refid="classpath"/>
            <classpath refid="testclasspath"/>
        </javac>
        <copy todir="${testclassdir}" >
            <fileset dir="${projectroot}/test" excludes="**/*.java,**/*.html"/>
        </copy>
    </target>

    <target name="test" depends="compiletest">
        <java classname="org.semanticweb.HermiT.AllTests" fork="true">
            <jvmarg value="-enableassertions"/>
            <jvmarg value="-Xmx700M"/>
            <classpath>
                <pathelement location="${testclassdir}"/>
            </classpath>
            <classpath refid="classpath"/>
            <classpath refid="testclasspath"/>
        </java>
    </target>

    <!-- AUXILIARY TARGETS -->

    <target name="build-datatypes-automata" depends="compile">
        <delete>
        	<fileset dir="${projectroot}/automaton" includes="*.dat"/>
       	</delete>
        <java classname="dk.brics.automaton.Datatypes" classpath="${classdir}">
            <sysproperty key="dk.brics.automaton.datatypes" value="${projectroot}/automaton"/>
        </java>
    </target>

</project>
